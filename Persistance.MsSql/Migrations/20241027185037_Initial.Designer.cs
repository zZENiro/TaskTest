// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.MsSql;

#nullable disable

namespace Persistance.MsSql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241027185037_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.BodyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BodyType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2979d54-aad6-4f6f-85c1-3e76f897dec0"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9811),
                            Name = "Седан"
                        },
                        new
                        {
                            Id = new Guid("2c0da9d1-2030-4ba6-9f7f-5dd29d3d1aa1"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9822),
                            Name = "Хэтчбек"
                        },
                        new
                        {
                            Id = new Guid("cac696ca-9bb5-493b-8b45-76f3c55b5747"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9823),
                            Name = "Универсал"
                        },
                        new
                        {
                            Id = new Guid("9ccb0d7c-38ef-4fe7-8d0e-21be476aea28"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9825),
                            Name = "Минивэн"
                        },
                        new
                        {
                            Id = new Guid("684fe536-4f2a-4b0e-80ab-d4fc7274e8ad"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9826),
                            Name = "Внедорожник"
                        },
                        new
                        {
                            Id = new Guid("03e69151-869f-4f0e-8faa-b9d2c71e86d5"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 332, DateTimeKind.Local).AddTicks(9828),
                            Name = "Купе"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeb47be5-5e22-4b55-86ac-bb6926f19023"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 333, DateTimeKind.Local).AddTicks(5791),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = new Guid("66c35efd-17d2-432c-a087-13cf87fcaf11"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 333, DateTimeKind.Local).AddTicks(5802),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = new Guid("9d6380d2-56c4-4765-9b54-abdb1e9063d1"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 333, DateTimeKind.Local).AddTicks(5808),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = new Guid("2bad76c9-4343-4b5d-baee-10c9d5cd8d56"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 333, DateTimeKind.Local).AddTicks(5810),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = new Guid("12fa5a31-559a-4cf0-a883-f0f1f112c229"),
                            Created = new DateTime(2024, 10, 27, 23, 50, 37, 333, DateTimeKind.Local).AddTicks(5811),
                            Name = "Toyota"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BodyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DealerSiteUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte>("SeatsCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("BrandId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Domain.Entities.Car", b =>
                {
                    b.HasOne("Domain.Entities.BodyType", "BodyType")
                        .WithMany()
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
